{"version":3,"sources":["components/college-card-content/CollegeCardContent.jsx","components/college-card/CollegeCard.jsx","App.js","index.js"],"names":["CollegeCardContent","num","inputNumber","toString","afterPoint","indexOf","substring","length","lastThreeDigit","Math","floor","otherNumbers","res","replace","originalFees","this","translateToIndianFormat","props","collegeDetails","original_fees","discountedFees","discounted_fees","className","style","fontSize","fontWeight","rating","rating_remarks","tags","map","tag","index","key","ranking","paddingRight","college_name","verticalAlign","display","Array","e","i","iconColor","icon","faStar","color","nearest_place","slice","join","famous_nearest_places","offertext","padding","discount","opacity","fees_cycle","amenties","Component","CollegeCard","colleges","collegeInfo","App","state","collegesInfo","collegeCard","numberOfVisibleClg","hasMore","fetchMoreColleges","maxNumberOfVisibleClg","collegesVisibleCount","hasMoreCollegesInList","collegeVisibleList","collegesData","setTimeout","setState","processCollegeData","numberOfCards","dataLength","next","loader","textAlign","endMessage","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.37ad8fd2.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport './CollegeCardContent.css';\r\n\r\nexport default class CollegeCardContent extends Component {\r\n\r\n    /**\r\n     *\r\n     * @param {*} num\r\n     * @return {*} \r\n     * @memberof CollegeCardContent\r\n     * @description Seperates digits with commas as per Indian Format\r\n     */\r\n    translateToIndianFormat(num) {\r\n        let inputNumber = num.toString();\r\n        let afterPoint = '';\r\n        if (inputNumber.indexOf('.') > 0) {\r\n            afterPoint = inputNumber.substring(inputNumber.indexOf('.'), inputNumber.length);\r\n        }\r\n\r\n        inputNumber = Math.floor(inputNumber);\r\n        inputNumber = inputNumber.toString();\r\n        let lastThreeDigit = inputNumber.substring(inputNumber.length - 3);\r\n        const otherNumbers = inputNumber.substring(0, inputNumber.length - 3);\r\n        if (otherNumbers !== '') {\r\n            lastThreeDigit = ',' + lastThreeDigit;\r\n        }\r\n\r\n        const res = otherNumbers.replace(/\\B(?=(\\d{2})+(?!\\d))/g, \",\") + lastThreeDigit + afterPoint;\r\n\r\n        return <span> {res} </span>;\r\n    }\r\n\r\n    render() {\r\n\r\n        const originalFees = this.translateToIndianFormat(this.props.collegeDetails.original_fees);\r\n        const discountedFees = this.translateToIndianFormat(this.props.collegeDetails.discounted_fees);\r\n\r\n        return (\r\n\r\n            <div className=\"about-college\">\r\n                <div className=\"college-image-area\">\r\n                    <div className=\"college-image\">\r\n                        <div className=\"on-img-content\">\r\n                            <div className=\"rating-block\">\r\n                                <div>\r\n                                    <span style={{ fontSize: 18.5 + \"px\", fontWeight: \"bold\" }}>\r\n                                        {this.props.collegeDetails.rating + \" \"}\r\n                                    </span>\r\n                                / 5\r\n                            </div>\r\n                                <div> {this.props.collegeDetails.rating_remarks} </div>\r\n                            </div>\r\n                            <div className=\"tags-block\">\r\n                                {\r\n                                    this.props.collegeDetails.tags\r\n                                        && this.props.collegeDetails.tags.length > 0 ?\r\n                                        (this.props.collegeDetails.tags.map((tag, index) => (\r\n                                            <div key={index} className=\"clg-tags\">\r\n                                                {tag}\r\n                                            </div>\r\n                                        )))\r\n                                        : null\r\n                                }\r\n                            </div>\r\n                            <div className=\"clg-rank\">\r\n                                {'#' + this.props.collegeDetails.ranking}\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"college-info-area\">\r\n                    <div className=\"clg-area\">\r\n                        <div className=\"clg-title\">\r\n                            <span style={{ paddingRight: \"10px\" }}>\r\n                                {this.props.collegeDetails.college_name}\r\n                            </span>\r\n                            <span style={{ verticalAlign: \"middle\", display: \"inline-flex\" }}>\r\n                                {\r\n                                    [...Array(5)].map((e, i) => {\r\n                                        let iconColor = '#adadad';\r\n                                        if (this.props.collegeDetails.rating > i) {\r\n                                            iconColor = '#444444';\r\n                                        }\r\n\r\n                                        return (<span key={i} style={{ fontSize: \"10px\" }}>\r\n                                            <FontAwesomeIcon icon={faStar} color={iconColor} />\r\n                                        </span>)\r\n                                    })\r\n\r\n                                }\r\n                            </span>\r\n                        </div>\r\n                        <div>\r\n                            {\r\n                                this.props.collegeDetails.nearest_place\r\n                                    && this.props.collegeDetails.nearest_place.length > 1 ?\r\n                                    <span style={{ fontWeight: \"500\" }}>\r\n                                        {this.props.collegeDetails.nearest_place[0]}\r\n                                    </span>\r\n                                    : null\r\n                            }\r\n                            {\r\n                                this.props.collegeDetails.nearest_place\r\n                                    && this.props.collegeDetails.nearest_place.length >= 2 ?\r\n                                    <span style={{ color: \"#adadad\" }}>\r\n                                        {' | ' + this.props.collegeDetails.nearest_place.slice(1).join(' | ')}\r\n                                    </span>\r\n                                    : null\r\n                            }\r\n                        </div>\r\n                        <div>\r\n                            <span style={{ fontWeight: \"bold\", color: \"#37b396\" }}>\r\n                                93% Match: &nbsp;\r\n                            </span>\r\n                            {this.props.collegeDetails.famous_nearest_places}\r\n                        </div>\r\n                        <div className=\"offer-block\">\r\n                            {this.props.collegeDetails.offertext}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"clg-fees-benefits\">\r\n                        <div style={{ padding: \"15px 10px\" }}>\r\n                            <div>\r\n                                <span>\r\n                                    <strike>\r\n                                        &#8377; {originalFees}\r\n                                    </strike>\r\n                                </span>\r\n                                <span style={{color: \"#dd1c26\"}}>\r\n                                    &nbsp; {this.props.collegeDetails.discount} % off\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"disc-fee\"> &#8377; {discountedFees} </div>\r\n                            <div style={{ opacity: 0.8 }}> {this.props.collegeDetails.fees_cycle} </div>\r\n                        </div>\r\n                        <div className=\"clg-amenities\">\r\n                            {this.props.collegeDetails.amenties.join(' . ')}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport CollegeCardContent from '../college-card-content/CollegeCardContent';\r\nimport './CollegeCard.css';\r\n\r\nexport default class CollegeCard extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"college-card\">\r\n                {\r\n                    this.props.colleges.map((collegeInfo, i) => {\r\n                        return (\r\n                            <div className=\"college-card-content\" key={i}>\r\n                                <CollegeCardContent collegeDetails={collegeInfo} />\r\n                            </div>\r\n                        )\r\n                    })\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\n\nimport InfiniteScroll from 'react-infinite-scroll-component';\n\nimport collegesData from './assets/data/colleges.json';\nimport CollegeCard from './components/college-card/CollegeCard';\n\nexport default class App extends Component {\n\n  state = {\n    collegesInfo: null,\n    collegeCard: null,\n    numberOfVisibleClg: 0,\n    hasMore: false\n  }\n\n  componentDidMount() {\n    //Get Colleges List\n    this.fetchMoreColleges(this.state.numberOfVisibleClg);\n  }\n\n  /**\n   * \n   * @param {*} maxNumberOfVisibleClg\n   * @memberof App\n   * @description Fetch Colleges detail information\n   */\n  fetchMoreColleges(maxNumberOfVisibleClg) {\n\n    let collegesVisibleCount = maxNumberOfVisibleClg;\n    let hasMoreCollegesInList = false;\n    let collegeVisibleList = [];\n\n    if (maxNumberOfVisibleClg < collegesData.colleges.length) {\n\n      hasMoreCollegesInList = false;\n      if ((maxNumberOfVisibleClg + 10) < collegesData.colleges.length) {\n        hasMoreCollegesInList = true;\n        collegesVisibleCount = maxNumberOfVisibleClg + 10;\n      } else {\n        hasMoreCollegesInList = false;\n        collegesVisibleCount = maxNumberOfVisibleClg + (collegesData.colleges.length - maxNumberOfVisibleClg);\n      }\n\n      collegeVisibleList = collegesData.colleges.slice(0, collegesVisibleCount);\n\n\n    } else {\n      collegesVisibleCount = collegesData.colleges.length;\n      hasMoreCollegesInList = false;\n      collegeVisibleList = collegesData.colleges;\n    }\n\n    //Adding some delay to load data\n    setTimeout(() => this.setState({\n      collegesInfo: collegeVisibleList,\n      hasMore: hasMoreCollegesInList,\n      numberOfVisibleClg: collegesVisibleCount\n    }, this.processCollegeData), 1000);\n\n  }\n\n  /**\n   * @memberof App\n   * @description Process college data. \n   * Calculating for multiple college cards. \n   * One single card contains 2 colleges information\n   */\n  processCollegeData() {\n    if ((this.state.collegesInfo != null) && (this.state.collegesInfo.length > 0)) {\n      let numberOfCards = 1;\n      if ((this.state.collegesInfo.length % 2) === 0) {\n        numberOfCards = this.state.collegesInfo.length / 2;\n      } else {\n        numberOfCards = (this.state.collegesInfo.length / 2) + 1;\n      }\n\n      this.setState({\n        collegeCard: numberOfCards\n      });\n    }\n  }\n\n\n  render() {\n\n    return (\n      (this.state.collegesInfo != null) && (this.state.collegesInfo.length > 0) ?\n        (\n          <InfiniteScroll\n            dataLength={this.state.collegeCard}\n            next={() => this.fetchMoreColleges(this.state.numberOfVisibleClg)}\n            hasMore={this.state.hasMore}\n            loader={<h2 style={{ textAlign: 'center' }}>Loading...</h2>}\n            endMessage={\n              <p style={{ textAlign: 'center' }}>\n                <b>Yay! You have seen all the Colleges</b>\n              </p>\n            }>\n            <div className=\"clg-list-title\"> Colleges in North India </div>\n            {[...Array(this.state.collegeCard)].map((e, i) =>\n              <CollegeCard\n                key={i}\n                colleges={[this.state.collegesInfo[i * 2], this.state.collegesInfo[(i * 2) + 1]]} />)\n            }\n          </InfiniteScroll>\n        ) : null\n    )\n  }\n\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}